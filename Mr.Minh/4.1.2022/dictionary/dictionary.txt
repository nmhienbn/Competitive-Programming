#include <bits/stdc++.h>
#define fi(i, a, b) for(int i = (a), _b = (b); i <= _b; i++)
#define fid(i, a, b) for(int i = (a), _b = (b); i >= _b; i--)
#define gb(x, i) (((x) >> (i)) & 1)
#define pii pair<int,int>
#define pb push_back
#define ll long long
#define Irelia "dictionary"
const int maxn = 1e4 + 5;
using namespace std;

int n, res;
string s[maxn];
vector<string> suffix, prefix;
map<string, int> st;

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    freopen(Irelia".inp", "r", stdin);
    freopen(Irelia".out", "w", stdout);
    cin >> n;
    fi(i, 1, n) cin >> s[i];//, st[s[i]]++;
    fi(i, 1, n){
        string tmp;
        fi(u, 0, s[i].size() - 1){
            tmp += s[i][u];
            prefix.pb(tmp);
        }
    }
    sort(prefix.begin(), prefix.end());
    prefix.resize(unique(prefix.begin(), prefix.end()) - prefix.begin());
    fi(i, 1, n){
        string tmp;
        fid(u, s[i].size() - 1, 0){
            tmp = s[i][u] + tmp;
            suffix.pb(tmp);
        }
    }
    sort(suffix.begin(), suffix.end());
    suffix.resize(unique(suffix.begin(), suffix.end()) - suffix.begin());
    for (auto a : prefix) for(auto b : suffix){
        st[a + b]++;
    }
    cout << st.size();
}

